{"ast":null,"code":"'use strict';\n/*\n * cls-bluebird\n * Function to shim `Promise.prototype.call`\n */\n// Modules\n\nvar shimmer = require('shimmer'); // Exports\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Patch `call` method to run callbacks in current CLS context.\n *\n * @param {Function} Promise - Bluebird Promise constructor to patch\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\n\nmodule.exports = function (Promise, ns) {\n  // Patch method\n  shimmer.wrap(Promise.prototype, 'call', function (callOriginal) {\n    return function () {\n      // Temporarily wrap `this._then` to bind the object method to current CLS context\n      // (`this.call()` will call `this._then()` synchronously)\n      var _thenOriginal = this._then,\n          ownProperty = hasOwnProperty.call(this, '_then');\n\n      this._then = function () {\n        // Unwrap `this._then`\n        if (ownProperty) {\n          this._then = _thenOriginal;\n        } else {\n          delete this._then;\n        } // Bind function that will be called to call object method to CLS context\n\n\n        arguments[0] = ns.bind(arguments[0]); // Run original `this._then` method\n\n        return _thenOriginal.apply(this, arguments);\n      }; // Call original `call` method\n\n\n      return callOriginal.apply(this, arguments);\n    };\n  });\n};","map":null,"metadata":{},"sourceType":"script"}