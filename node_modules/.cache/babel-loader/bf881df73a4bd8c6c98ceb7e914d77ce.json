{"ast":null,"code":"'use strict';\n/*\n * cls-bluebird\n * Function to shim an object method to retain CLS context\n */\n// Modules\n\nvar shimmer = require('shimmer'); // Exports\n\n/**\n * Patch method to run callbacks in current CLS context.\n *\n * @param {Object} obj - Object on which to find method\n * @param {string} methodName - method name\n * @param {Array} args - Array of indexes of arguments which are callbacks\n *   (negative numbers count from end e.g. -1 is last argument, -2 is penultimate)\n * @param {Object} ns - CLS namespace to bind callbacks to\n * @returns {undefined}\n */\n\n\nmodule.exports = function (obj, methodName, args, ns) {\n  // Skip non-existent methods\n  if (!obj[methodName]) return; // Patch method\n\n  shimmer.wrap(obj, methodName, function (original) {\n    return function () {\n      for (var i = 0; i < args.length; i++) {\n        var argIndex = args[i];\n        if (argIndex < 0) argIndex += arguments.length;\n        var callback = arguments[argIndex];\n        if (typeof callback === 'function') arguments[argIndex] = ns.bind(callback);\n      }\n\n      return original.apply(this, arguments);\n    };\n  });\n};","map":null,"metadata":{},"sourceType":"script"}