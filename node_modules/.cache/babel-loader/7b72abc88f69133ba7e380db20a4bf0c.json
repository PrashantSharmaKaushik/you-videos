{"ast":null,"code":"// --------------------\n// is-bluebird module\n// --------------------\n// exports\n\n/**\n * Identifies whether input is a bluebird promise.\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird promise, false if not\n */\nvar isBluebird = function isBluebird(promise) {\n  return isObject(promise) && isBluebird.ctor(promise.constructor);\n};\n/**\n * Identifies whether input is a bluebird promise constructor.\n * @param {*} Promise - Input to be tested\n * @returns {boolean} - true if is bluebird promise constructor, false if not\n */\n\n\nisBluebird.ctor = function (Promise) {\n  return typeof Promise == 'function' && !!Promise.prototype && typeof Promise.prototype._addCallbacks == 'function';\n};\n/**\n * Identifies whether input is a bluebird v2 promise.\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v2 promise, false if not\n */\n\n\nisBluebird.v2 = function (promise) {\n  return isObject(promise) && isBluebird.v2.ctor(promise.constructor);\n};\n/**\n * Identifies whether input is bluebird v2 promise constructor.\n * @alias isBluebird.ctor.v2\n *\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v2 promise, false if not\n */\n\n\nisBluebird.v2.ctor = function (Promise) {\n  return isBluebird.ctor(Promise) && Promise.prototype._addCallbacks.length == 6;\n};\n\nisBluebird.ctor.v2 = isBluebird.v2.ctor;\n/**\n * Identifies whether input is a bluebird v3 promise.\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v3 promise, false if not\n */\n\nisBluebird.v3 = function (promise) {\n  return isObject(promise) && isBluebird.v3.ctor(promise.constructor);\n};\n/**\n * Identifies whether input is bluebird v3 promise constructor.\n * @alias isBluebird.ctor.v3\n *\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v3 promise, false if not\n */\n\n\nisBluebird.v3.ctor = function (Promise) {\n  return isBluebird.ctor(Promise) && Promise.prototype._addCallbacks.length == 5;\n};\n\nisBluebird.ctor.v3 = isBluebird.v3.ctor;\n/**\n * Check if input is an object.\n * @param {*} obj - Input to be tested\n * @returns {boolean} - true if is an object, false if not\n */\n\nfunction isObject(obj) {\n  return !!obj && typeof obj == 'object';\n} // export isBluebird\n\n\nmodule.exports = isBluebird;","map":null,"metadata":{},"sourceType":"script"}